type Field {
    id: ID!
    name: String!
    dataType: String!
    optional: Boolean!
    isMulti: Boolean!
    multiType: String!
    isAssetRef: Boolean!
    assetId: String
    sortOrder: Int
}

extend type Query {
    findAllFields: [Field]!
}

input FieldDTO {
    name: String!
    dataType: String!
    optional: Boolean!
    isMulti: Boolean!
    multiType: String!
    isAssetRef: Boolean!
    assetId: String
    sortOrder: Int
}

input SortedFieldListDTO {
	fields: [SortedFieldDTO]
}

input SortedFieldDTO {
	id: ID!
	sortOrder: Int
}

extend type Mutation {
    newField(fieldDTO: FieldDTO!) : Field!
    deleteField(fieldId: String!) : String!
    sortFields(sortedFields: SortedFieldListDTO!): Boolean! 
}